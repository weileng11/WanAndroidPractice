<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:bind="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <!--DataBinding支持AutoComplete，所以type填入Student，就可以像在代码里一样进行导包了-->
        <!--The user variable within data describes a property that may be used within this layout.-->
        <variable
            name="student"
            type="com.bruce.databing.model.Student" />

        <variable
            name="presenter"
            type="com.bruce.databing.view.activity.A02DataBindingBaseActivity.Presenter" />

        <!--泛型的支持会在编译时期报红线，但是是可以直接运行的,但是需要通过转义字符才行，如：&lt;数据类型> 或者&lt;数据类型&gt;-->
        <variable
            name="contents"
            type="List&lt;String&gt;" />

        <!--非lang包的类都需要import（比如工具类），然后就可以使用其方法了-->
        <import
            alias="Utils"
            type="com.bruce.databing.util.MyUtils" />

        <import type="java.util.List" />

    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical"
        >

        <!--固定字符 我们可以用 `` 包裹，对应的，外部用""包裹-->
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:onClick="@{() -> presenter.onNameClick(student.name)}"
            android:text="@{`Student FirstName :` + student.name}"
            android:textAllCaps="false"
            android:textSize="14sp" />

        <!--使用MyUtils工具类(别名 Utils)，在回调方法中返回 age+1 -->
        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:onClick="@{() ->  presenter.onAgeClick(Utils.addAge(student.age))}"
            android:text="@{`Student 年龄 :` + student.age}"
            android:textAllCaps="false"
            android:textSize="14sp" />

        <!--通过命名空间 bind include中对应variable的对象-->
        <include
            layout="@layout/include_bind_views"
            bind:studentInner="@{student}" />

        <!--固定字符 我们也可以用 "" 包裹，对应的，外部用``包裹-->
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_horizontal"
            android:text='@{"list :"+contents[0]}' />

        <!--引用资源文件-->
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_horizontal"
            android:text="@{`引用资源文件 appName -> ` + @string/app_name}" />

        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:onClick="@{() ->  presenter.onAgeAdd3()}"
            android:text="@{`ObservableObjects绑定 age+3`}"
            android:textAllCaps="false"
            android:textSize="14sp" />

        <Button
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:onClick="@{() ->  presenter.onNameAppendPoint()}"
            android:text="@{`ObservableField绑定 name `}"
            android:textAllCaps="false"
            android:textSize="14sp" />

        <!--ObservableMap-->
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_horizontal"
            android:text="@{`ObservableMap,String =` + presenter.datas[`string`]}" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_horizontal"
            android:text="@{`ObservableMap,int =` + presenter.datas[`int`]}" />

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_horizontal"
            android:text="@{`ObservableMap,Student =` + presenter.datas[`student`]}" />

    </LinearLayout>
</layout>